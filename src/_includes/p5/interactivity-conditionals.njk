---
layout: week.njk
title: "Interactivity and Conditionals"
weekNum: 7
tags:
  - p5
  - unit2
  - week
  - "Share and Discuss Coding Sketch from last week"
  - "Clarify or Demo any coding concepts unclear from Coding Sketch #4"
  - Intro Movement and Incrementing Variables
  - "Start work on Coding Sketch for next week"
eleventyComputed:
  readings:
    - name: "{{ texts.p5.title }}"
      url: "{{ texts.p5.url }}"
      description: Chapters 5. Response
      img: "{{ texts.p5.img }} "
      authors: "{{ texts.p5.authors }}"
sketch:
      title: "Week 7 Coding Sketch"
      img:
        - button1.png
        - button2.png
      text:
        - Create an interface with a "button" or some clickable square or circle.
        - this is not the "button" feature in p5*js -- don't use that reference material. Instead you will draw a shape (Use square, circle, triangle, or rectangle. Irregular shapes are not recommended!) that will serve as your button. Use an if/else statement to change the color of the button if your mouse is on top of the shape.
        - Create a second color change if the mouse is pressed using the system variable mouseIsPressed and the else if constructor.
        - Bonus. Use a second if/else statement to change the color of the background when the mouse is in a certain region of the canvas.
      tips:
        - In order for our program to know if our mouse is over our shape button, we will need to use mouseX, mouseY to input our mouse coordinates. We will also need to test to see if our mouse coordinates fall inside the coordinates of our shape. This will vary based on whether you choose a rectangle or a circle for your button. Check out the examples in the book for how to calculate these using 1) >, <, && logical operators inside an if statement in rectangles, or 2) the dist() function in circles.
        - Use variables to define your colors ahead of time. Use a color picker app to get a color palette from a favorite site or artwork, or use a palette generator app. Be sure you are referencing colors correctly in either RGB or Hexcode.
code:
  - translate
  - rotate
  - scale
  - degreeMode
  - rectMode
  - ellipseMode
  - push
  - pop
examples:
  - type: p5
    url: gjohns13-spectacular/full/lbj8rzt6N
  - type: p5
    url: gjohns13-spectacular/full/qEIJPfrUG
  - type: p5
    url: gjohns13-spectacular/full/D1dXNBM1T
  - type: p5
    url: glj/full/mQmfdhaHg
  - type: p5
    url: glj/full/eNHc_mYaT
  - type: p5
    url: glj/full/6JTfoG1GK
  - type: p5
    url: glj/full/Aai62iKHI
  - type: p5
    url: glj/full/u1GAHn836
  - type: p5
    url: glj/full/NlOlgXnyo
other:
  - type: youtube
    id: o9sgjuh-CBM
  - type: youtube
    id: maTfm84mLbo
  - type: youtube
    id: b12wJHBcrE0
---

{# - type: p5

n - type: p5 url:
gjohns13-spectacular/full/2oh104BfA - type: p5 url:
gjohns13-spectacular/full/IIcerF02i - type: p5 url:
gjohns13-spectacular/full/B5uzNLDP2 - type: p5 url:
gjohns13-spectacular/full/GX1qy-T6o - type: p5 url: glj/full/L2bhGJfC6 - type:
p5 url: glj/full/Z2leJttLz - type: p5 url: glj/full/ZChT09YSN #}
